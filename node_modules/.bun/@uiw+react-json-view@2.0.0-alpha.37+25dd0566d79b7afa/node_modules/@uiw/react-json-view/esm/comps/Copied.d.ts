import { type SectionElementResult } from '../store/Section';
import { type TagType } from '../store/Types';
export type CopiedOption<T extends object> = {
    value?: T;
    copied: boolean;
    setCopied: React.Dispatch<React.SetStateAction<boolean>>;
};
export interface CopiedProps<T extends object> extends React.SVGProps<SVGSVGElement>, SectionElementResult<T> {
    expandKey: string;
    beforeCopy?: (copyText: string, keyName?: string | number, value?: T, parentValue?: T, expandKey?: string, keys?: (number | string)[]) => string;
}
export declare const Copied: {
    <T extends object, K extends TagType>(props: CopiedProps<T>): string | number | true | Iterable<import("react").ReactNode> | import("react/jsx-runtime").JSX.Element | null;
    displayName: string;
};
