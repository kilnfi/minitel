import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["as", "render"];
import { useSectionStore } from "../store/Section.js";
import { useSectionRender } from "../utils/useRender.js";
import { jsx as _jsx } from "react/jsx-runtime";
export var Ellipsis = props => {
  var {
    Ellipsis: Comp = {}
  } = useSectionStore();
  useSectionRender(Comp, props, 'Ellipsis');
  return null;
};
Ellipsis.displayName = 'JVR.Ellipsis';
export var EllipsisComp = _ref => {
  var {
    isExpanded,
    value,
    keyName
  } = _ref;
  var {
    Ellipsis: Comp = {}
  } = useSectionStore();
  var {
      as,
      render
    } = Comp,
    reset = _objectWithoutPropertiesLoose(Comp, _excluded);
  var Elm = as || 'span';
  var child = render && typeof render === 'function' && render(_extends({}, reset, {
    'data-expanded': isExpanded
  }), {
    value,
    keyName
  });
  if (child) return child;
  if (!isExpanded || typeof value === 'object' && Object.keys(value).length == 0) return null;
  return /*#__PURE__*/_jsx(Elm, _extends({}, reset));
};
EllipsisComp.displayName = 'JVR.EllipsisComp';