import { type FC, type PropsWithChildren } from 'react';
export declare const bigIntToString: (bi?: BigInt | string) => string;
export declare const SetComp: FC<PropsWithChildren<{
    value: unknown;
    keyName: string | number;
}>>;
export declare const MapComp: FC<PropsWithChildren<{
    value: unknown;
    keyName: string | number;
}>>;
type TypeProps = PropsWithChildren<{
    keyName: string | number;
    keys?: (string | number)[];
}>;
export declare const TypeString: FC<TypeProps>;
export declare const TypeTrue: FC<TypeProps>;
export declare const TypeFalse: FC<TypeProps>;
export declare const TypeFloat: FC<TypeProps>;
export declare const TypeInt: FC<TypeProps>;
export declare const TypeBigint: FC<{
    children?: BigInt;
} & Omit<TypeProps, 'children'>>;
export declare const TypeUrl: FC<{
    children?: URL;
} & Omit<TypeProps, 'children'>>;
export declare const TypeDate: FC<{
    children?: Date;
} & Omit<TypeProps, 'children'>>;
export declare const TypeUndefined: FC<TypeProps>;
export declare const TypeNull: FC<TypeProps>;
export declare const TypeNan: FC<TypeProps>;
export {};
