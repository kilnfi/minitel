name: Deploy to Vercel

on:
  push:
    branches: [ main, staging ]
    paths:
      - 'apps/**'
      - 'packages/**'
      - '.github/workflows/deploy.yml'

jobs:
  deploy:
    runs-on: fixed-egress-4c-16g
    strategy:
      matrix:
        app: [ethereum, solana]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install Vercel CLI
        run: bun add --global vercel@latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Pull Vercel Environment Information (Production)
        if: github.ref == 'refs/heads/main'
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./apps/${{ matrix.app }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ matrix.app == 'ethereum' && secrets.VERCEL_PROJECT_ID_ETHEREUM || matrix.app == 'solana' && secrets.VERCEL_PROJECT_ID_SOLANA || secrets.VERCEL_PROJECT_ID_NEAR }}

      - name: Pull Vercel Environment Information (Staging)
        if: github.ref != 'refs/heads/main'
        run: vercel pull --yes --environment=staging --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./apps/${{ matrix.app }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ matrix.app == 'ethereum' && secrets.VERCEL_PROJECT_ID_ETHEREUM || matrix.app == 'solana' && secrets.VERCEL_PROJECT_ID_SOLANA || secrets.VERCEL_PROJECT_ID_NEAR }}

      - name: Build Project Artifacts
        run: vercel build ${{ github.ref == 'refs/heads/main' && '--prod' || '' }} --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./apps/${{ matrix.app }}
        timeout-minutes: 10
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ matrix.app == 'ethereum' && secrets.VERCEL_PROJECT_ID_ETHEREUM || matrix.app == 'solana' && secrets.VERCEL_PROJECT_ID_SOLANA || secrets.VERCEL_PROJECT_ID_NEAR }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt ${{ github.ref == 'refs/heads/main' && '--prod' || '' }} --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./apps/${{ matrix.app }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ matrix.app == 'ethereum' && secrets.VERCEL_PROJECT_ID_ETHEREUM || matrix.app == 'solana' && secrets.VERCEL_PROJECT_ID_SOLANA || secrets.VERCEL_PROJECT_ID_NEAR }}